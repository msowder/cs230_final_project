/* FILENAME: DisplayRecipesFrame.java
 * AUTHORS: Magdalena Sowder, Michelle Duan, Elizabeth Kysel
 * COMMENTS: CS 230 Final Project What Should I Eat?
 * DATE: Dec 9 2015
 */

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.Image;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

//public class DisplayRecipesFrame extends JPanel {
//  //declare private objects 
//  private JPanel resultLabelPanel, resultPanel /*checkBoxLabelPanel, checkBoxPanel,contentPane*/;
//  private JLabel resultLabel;
//  private RecipeCollection collection;
//  int numRecipes; //to be instantiated later on using collection (how many recipes will display)
//  
//  // Constructor
//  // Note: Constructor takes instance of RecipeCollection as input
//  public DisplayRecipesFrame(RecipeCollection queue){
//    
//    this.collection = queue;
//    // sets the layout of the panel to vertical box layout
//    setLayout(new BoxLayout (this, BoxLayout.Y_AXIS));
//    //setPreferredSize(new Dimension(400,400));
//    
//    //***initialize numRecipes;
//    
//    
//    //gets size of priority queue
//    int size = collection.size();
//    //sets size of numRecipes
//    if (size>5 || size==5) {
//      numRecipes = 5;
//    } else {
//      numRecipes = size;
//    }
//    
//    resultLabelPanel = new JPanel();
//    resultLabel = new JLabel("You can make: " + numRecipes + ". ");
//    resultLabelPanel.add(resultLabel);
//    resultPanel = new JPanel();
//    //adds these recipe titles 
//    for (int i=0; i < numRecipes; i++) {
//      Recipe recipe = collection.peek();
//      //resultPanel.add(recipe.toString());
//      collection.remove();
//    }
//    
//    
//    
//    //adds all the subpanels to the IngredientsFrame  and sets their perspective positions within the panel
//    add(resultLabelPanel, BorderLayout.NORTH);
//    add(resultPanel, BorderLayout.SOUTH);
//    
//  }
// 
//  // --------------------------------------------------
//  // Represents the change listener for the check boxes
//  // NOTE: does not implement any event, because the information 
//  // received will be used during the event of the displayButton being pushed
//  // --------------------------------------------------
// }
//



public class DisplayRecipesFrame extends JPanel {
  private JLabel text, pumpkin; //instance variables for JLabels
  private RecipeCollection recipes;
  
  public DisplayRecipesFrame(RecipeCollection recipes) {
    
    //makes a new JLabel with an HTML div and adds text to it with line breaks
    text = new JLabel("You can make 5 recipes");
    
    text.setFont(new Font("Times", Font.PLAIN, 24));
    text.setForeground(Color.blue);
    
    Image image = null;
    try {
      URL url = new URL("http://www.mkyong.com/image/mypic.jpg");
      image = ImageIO.read(url);
    } catch (IOException e) {
      e.printStackTrace();
    }
    
    JLabel label = new JLabel(new ImageIcon(image));
    add(label);

    //adds an image to the panel
//    add(new JLabel(new ImageIcon("pumpkin.png")));
    
    //adds the labels to the panel 
    add(text);
    //sets the size and background color of the panel
    setPreferredSize(new Dimension(850, 300));
    setBackground(Color.yellow);
  }
}
